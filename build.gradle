buildscript {
    ext {
        kotlinVersion = '1.3.50'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlinVersion
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-allopen', version: kotlinVersion
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-noarg', version: kotlinVersion

        classpath group: 'pl.allegro.tech.build', name: 'axion-release-plugin', version: '1.10.2'
        classpath group: 'com.bmuschko', name: 'gradle-nexus-plugin', version: '2.3.1'
        classpath group: 'io.codearte.gradle.nexus', name: 'gradle-nexus-staging-plugin', version: '0.21.1'
        classpath group: 'com.github.ben-manes', name: 'gradle-versions-plugin', version: '0.25.0'
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '5.2.1'
    }
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'com.bmuschko.nexus'
apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'org.owasp.dependencycheck'


scmVersion {
    tag {
        prefix = 'kromium'
    }
}

group = 'pl.wendigo'
version = scmVersion.version

jar {
    baseName = 'kromium'
    version = scmVersion.version
}

configurations {
    ktlint
}

compileKotlin {
    kotlinOptions.languageVersion = "1.3"
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

dependencies {
    compile group: 'pl.wendigo', name: 'chrome-reactive-kotlin', version: '0.5.7'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testCompile group: 'org.codehaus.groovy', name: 'groovy-servlet', version: '2.5.8'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
    testCompile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.20.v20190813'

    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '2.1'
    testRuntime group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    testRuntime group: 'org.objenesis', name: 'objenesis', version: '3.0.1'

    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.12.1'
    testCompile group: 'org.testcontainers', name: 'spock', version: '1.12.1'

    ktlint group: 'com.github.shyiko', name: 'ktlint', version: '0.31.0'
}

modifyPom {
    project {
        name 'Kromium - Chrome automation library'
        description 'Kromium - high level, remote chrome automation library based on reactive DevTools protocol client (chrome-reactive-kotlin)'
        url 'https://serafin.tech'
        inceptionYear '2017'

        scm {
            connection 'scm:git:https://github.com/wendigo/kromium.git'
            url 'https://github.com/wendigo/kromium'
            developerConnection 'scm:git:https://github.com/wendigo/kromium.git'
        }

        scm {
            connection 'scm:git:https://github.com/wendigo/kromium.git'
            url 'https://github.com/wendigo/kromium'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                name 'Mateusz "Serafin" Gajewski'
                email 'mateusz.gajewski@gmail.com'
            }
        }
    }
}

nexusStaging {
    packageGroup = 'pl.wendigo'
    numberOfRetries = 10
    delayBetweenRetriesInMillis = 3000
}

wrapper {
    gradleVersion = '5.6.2'
}

test {
    maxParallelForks = Math.min(Runtime.getRuntime().availableProcessors(), 8)

    testLogging {
        events "passed", "skipped", "failed"
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
    }
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["src/**/*.kt"]
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args = ["-F", "src/**/*.kt"]
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/jacoco/reports")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("$buildDir/jacoco/html")
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.encoding = 'UTF-8'
}
